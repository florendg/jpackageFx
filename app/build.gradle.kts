/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/6.7.1/userguide/building_java_projects.html
 */

plugins {
    // Apply the application plugin to add support for building a CLI application in Java.
    application
}

repositories {
    // Use JCenter for resolving dependencies.
    mavenCentral()
    jcenter()
}

var currentOS = org.gradle.nativeplatform.platform.internal.DefaultNativePlatform.getCurrentOperatingSystem()
var platform = ""
if (currentOS.isMacOsX) {
    platform = "mac"
} else if (currentOS.isLinux) {
    platform = "linux"
} else if (currentOS.isWindows) {
    platform = "win"
}

var javaFXVersion = "15.0.1"

dependencies {

    implementation("org.openjfx:javafx-base:${javaFXVersion}:${platform}")
    implementation("org.openjfx:javafx-controls:${javaFXVersion}:${platform}")
    implementation("org.openjfx:javafx-graphics:${javaFXVersion}:${platform}")
    implementation("org.openjfx:javafx-fxml:${javaFXVersion}:${platform}")

    testImplementation("org.junit.jupiter:junit-jupiter-api:5.6.2")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine")
}

application {
    // Define the main class for the application.
    mainModule.set("dev.vulture.packagefx")
    mainClass.set("dev.vulture.packagefx.App")
}

java {
    modularity.inferModulePath.set(true)
    version = JavaVersion.VERSION_15
}

tasks {
    test {
        // Use junit platform for unit tests.
        useJUnitPlatform()
    }
    task<Copy>("copyDependencies") {
        from(configurations.default)
        into("$buildDir/modules")
    }

    task<Exec>("package") {
        dependsOn(listOf("build", "copyDependencies"))
        commandLine("jpackage")
        args(listOf(
                "-n", "fxBuildDemo",
                "--jlink-options","--strip-native-commands --no-man-pages --no-header-files",
                "-p", "$buildDir/modules:$buildDir/libs",
                "-d", "$buildDir/installer",
                "-m", "dev.vulture.packagefx/dev.vulture.packagefx.App"))
    }

}
